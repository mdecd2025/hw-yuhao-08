<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-yuhao-08/content/index.html">https://mdecd2025.github.io/hw-yuhao-08/content/index.html</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-yuhao-08">https://github.com/mdecd2025/hw-yuhao-08</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h1>week</h1>
<h2>w1</h2>
<p>1.建立個人作業網站與倉儲</p>
<p>2.分組6人一組進行協同倉儲管理</p>
<p>3.分組團隊 (Teams) 建立後, 請參考<a href="https://mde.tw/cd2025/content/list.html">說明</a>後, 將各班各學員與各團隊的倉儲與網站連結, 分別放入標題為 list (使用第一階標題) 的網頁中.</p>
<p><a href="https://www.onshape.com/en/education/sign-up">註冊 Onshape 教育帳號</a>)</p>
<p>4.進行python改版</p>
<p>5.以下是影片操作過程</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="514" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ThP6HovOjWY" title="python 更新" width="956"></iframe></p>
<h2>w3</h2>
<p>以下是使用chatgpt來顯示我們這組的倉儲以及靜態網頁的程式碼</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document

# 學員資料 URL
url = "https://mde.tw/list/2a.txt"
# 讀取網站資料
all_stud = open(url).readlines()[1:]  # 忽略標題列

# 指定要顯示的學號
selected_ids = {"41223118", "41223122", "41223131", "41223134", "41223136", "41223158"}

# 取得網頁中的 brython_div1 位置
brython_div1 = document["brython_div1"]

# 加入 2a-ag4 分組倉儲與靜態網頁（優先顯示）
brython_div1 &lt;= "(Group-4) " + html.A("2a-ag4", href="https://mdecd2025.github.io/2a-ag4/content/index.html")
brython_div1 &lt;= " | " + html.A("repo", href="https://github.com/mdecd2025/2a-ag4")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= html.BR()

# 確保個別學員標題顯示
count = 0
for i in all_stud:
    stud = i.split("\t")
    stud_num = stud[0]
    github = stud[1]
    
    if stud_num in selected_ids:
        count += 1
        brython_div1 &lt;= str(count) + ". " + html.A(str(stud_num), href="https://mdecd2025.github.io/hw-" + str(github))
        brython_div1 &lt;= " | " + html.A("repo", href="https://github.com/mdecd2025/hw-" + str(github))
        brython_div1 &lt;= html.BR()
</pre>
<p>以下使用Brython來顯示出我們這組的倉儲以及網頁連結</p>
<p><span>(Group-4) </span><a href="https://mdecd2025.github.io/2a-ag4/content/index.html">2a-ag4</a><span> | </span><a href="https://github.com/mdecd2025/2a-ag4">repo</a><br/><span>1. </span><a href="https://mdecd2025.github.io/hw-zhe41223118">41223118</a><span> | </span><a href="https://github.com/mdecd2025/hw-zhe41223118">repo</a><br/><span>2. </span><a href="https://mdecd2025.github.io/hw-Spirit0224">41223122</a><span> | </span><a href="https://github.com/mdecd2025/hw-Spirit0224">repo</a><br/><span>3. </span><a href="https://mdecd2025.github.io/hw-yuhao-08">41223131</a><span> | </span><a href="https://github.com/mdecd2025/hw-yuhao-08">repo</a><br/><span>4. </span><a href="https://mdecd2025.github.io/hw-41223134">41223134</a><span> | </span><a href="https://github.com/mdecd2025/hw-41223134">repo</a><br/><span>5. </span><a href="https://mdecd2025.github.io/hw-41223136">41223136</a><span> | </span><a href="https://github.com/mdecd2025/hw-41223136">repo</a><br/><span>6. </span><a href="https://mdecd2025.github.io/hw-41223158">41223158</a><span> | </span><a href="https://github.com/mdecd2025/hw-41223158">repo</a></p>
<h3>尚未分組人員</h3>
<p>這是利用ChatGPT做出的尚未分組的名單，但目前沒有去尋找加入錯的班級的程式碼</p>
<p>更新前:(有顯示出已加入學名單的人員)</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document

# 學員資料 URL
url = "https://mde.tw/list/2a.txt"
# 讀取網站資料
all_stud = open(url).readlines()[1:]  # 忽略標題列

# 參與分組的學員帳號
assigned_accounts = {
    '41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128',
    '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114',
    'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136',
    'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106',
    'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125',
    'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134',
    '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112',
    '41223146', '41223119'
}

# 建立學號對應帳號的字典
stud_dict = {}
for line in all_stud:
    stud = line.split("\t")
    stud_num = stud[0].strip()
    github = stud[1].strip()
    stud_dict[stud_num] = github

# 計算未納組的學員
unassigned_students = [stud_num for stud_num in stud_dict if stud_dict[stud_num] not in assigned_accounts]

# 取得網頁中的 brython_div1 位置
brython_div1 = document["brython_div1"]

# 顯示未納組的學員學號
brython_div1 &lt;= html.P("未納組學員學號:")
count = 0
for stud_num in sorted(unassigned_students):
    count += 1
    brython_div1 &lt;= str(count) + ". " + stud_num
    brython_div1 &lt;= html.BR()
</pre>
<p></p>
<p>得到結果如下</p>
<p>未納組學員學號:</p>
<ol>
<li>41023220   </li>
<li>41223111</li>
<li>41223119</li>
<li>41223124</li>
<li>41223148</li>
</ol>
<p>更新如下:(已正確加入尚未分組的人員)</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">import urllib.request

# 設定 URL
url = "https://mde.tw/list/2a.txt"

# 讀取網站內容
response = urllib.request.urlopen(url)
data = response.read()  # 讀取原始資料

# 檢查是否為 bytes，若是則解碼
if isinstance(data, bytes):
    data = data.decode('utf-8')

# 分割行
data_lines = data.splitlines()

# 確保資料存在
if len(data_lines) &gt; 1:
    all_stud = data_lines[1:]  # 跳過標題列
    print("總共有 " + str(len(all_stud)) + " 名學員")
else:
    all_stud = []
    print("學員名單讀取失敗")

# 已分組學員帳號
grouped_accounts = {
    '41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', 
    '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', 
    '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', 
    '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 
    'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 
    'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 
    'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 
    'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 
    'WSE41223112', '41223146', '41223119'
}

# 未分組學員清單
ungrouped_accounts = []

for student in all_stud:
    parts = student.split()  # 用空格分割學號和帳號
    if len(parts) == 1:
        student_id = parts[0]
        account = student_id  # 如果沒有帳號，將學號當作帳號
    elif len(parts) == 2:
        student_id, account = parts
    
    account = account.strip()
    
    # 如果帳號不在已分組帳號清單中，則加入未分組學員清單
    if account not in grouped_accounts:
        ungrouped_accounts.append(student_id)

# 顯示未分組學員的學號，格式化輸出
print("未納組學員學號:")
print("\n".join(ungrouped_accounts))
</pre>
<p>總共有 60 名學員<br/>未納組學員學號:<br/>41023220<br/>41223111<br/>41223124<br/>41223148</p>
<h3>ssh</h3>
<p>1.先在puttygen.exe上建立一個鑰使密碼，然後再save private key</p>
<p><img alt="" height="332" src="/images/螢幕擷取畫面 2025-03-21 162138.png" width="425"/></p>
<p>2.存入個人github.com上</p>
<p><img alt="" height="56" src="/images/螢幕擷取畫面 2025-03-21 161607.png" width="426"/></p>
<p>3.開啟並操作putty.exe</p>
<p><img alt="" height="298" src="/images/螢幕擷取畫面 2025-03-21 161053.png" width="307"/>  <img alt="" height="297" src="/images/螢幕擷取畫面 2025-03-21 161133.png" width="307"/></p>
<p><img alt="" height="300" src="/images/螢幕擷取畫面 2025-03-21 161142.png" width="308"/></p>
<p>4.存完後正式開啟</p>
<p><img alt="" height="210" src="/images/螢幕擷取畫面 2025-03-21 161156.png" width="331"/></p>
<p></p>
<h2>w4</h2>
<p><span style="background-color: #ffff00;">建立可攜程式</span></p>
<p>操作步驟如下</p>
<p>1.先改變IP位置</p>
<p>要注意ipv6和ipv4是否衝突，下面這張圖是以我學號建立的ip位置</p>
<p><img alt="" height="289" src="/images/網路ip截圖.png" width="352"/></p>
<p>2.開啟start，使用內建的cmd</p>
<p>3.在cmd輸入如下</p>
<p><span style="background-color: #ffff00;">注意:前提是要先建立"git clone <a href="https://github.com/mdecd2025/hw-yuhao-08.git" style="background-color: #ffff00;">https://github.com/mdecd2025/hw-yuhao-08.git</a> 41223131"</span></p>
<p><img alt="" height="398" src="/images/輸入cmd如下.png" width="756"/></p>
<p>4.影片操作如下(要先設定身分下去進行上傳)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/1ZrQZtTuNVk" title="41223131-利用可攜程式上傳" width="560"></iframe></p>
<h2>w5</h2>
<p>1.<a href="https://mdecd2025.github.io/2a-ag4/content/task5.html">分組解析webot</a></p>
<p>2.下載<a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a><span><span> </span>(1.5 GB, 解開後約為 2.9GB, 可單獨運作)</span></p>
<p>並且啟動ipv4，在CMD輸入如下，即可正確開啟</p>
<p><img alt="" height="345" src="/images/webots 正常開啟畫面.png" width="664"/></p>
<h2>w6</h2>
<p><a href="https://mdecd2025.github.io/2a-ag4/content/task5.html">本組回答問題的網頁</a></p>
<p>下面是我個人需要回答的問題</p>
<p>4.請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法:</p>
<ul>
<li data-sourcepos="3:1-6:53"><strong>Simulation</strong>（模擬）：
<ul data-sourcepos="4:5-6:53">
<li data-sourcepos="4:5-4:27">解釋：使用模型來模仿真實系統或過程的行為。</li>
<li data-sourcepos="5:5-5:71">用法：Webots is a professional mobile robot<span> </span><strong>simulation</strong><span> </span>software.</li>
<li data-sourcepos="6:5-6:53">Webots<span> </span><strong>simulation</strong><span> </span>consists of a world file.</li>
</ul>
</li>
<li data-sourcepos="7:1-10:72"><strong>Prototyping</strong>（原型製作）：
<ul data-sourcepos="8:5-10:72">
<li data-sourcepos="8:5-8:28">解釋：快速建立一個初步模型，用於測試或演示。</li>
<li data-sourcepos="9:5-9:54">用法：provides a rapid<span> </span><strong>prototyping</strong><span> </span>environment.</li>
<li data-sourcepos="10:5-10:72">robot<span> </span><strong>prototyping</strong><span> </span>(e.g., academic, automotive, toy industries)</li>
</ul>
</li>
<li data-sourcepos="11:1-13:102"><strong>Actuators</strong>（致動器）：
<ul data-sourcepos="12:5-13:102">
<li data-sourcepos="12:5-12:33">解釋：將信號轉換為機械運動的裝置，用於控制機器或系統。</li>
<li data-sourcepos="13:5-13:102">用法：Users can equip robots with sensors and<span> </span><strong>actuators</strong><span> </span>and program them for desired behaviors.</li>
</ul>
</li>
<li data-sourcepos="14:1-16:102"><strong>Sensors</strong>（感測器）：
<ul data-sourcepos="15:5-16:102">
<li data-sourcepos="15:5-15:27">解釋：偵測環境變化並將其轉換為信號的裝置。</li>
<li data-sourcepos="16:5-16:102">用法：Users can equip robots with<span> </span><strong>sensors</strong><span> </span>and actuators and program them for desired behaviors.</li>
</ul>
</li>
<li data-sourcepos="17:1-19:55"><strong>Locomotion</strong>（運動）：
<ul data-sourcepos="18:5-19:55">
<li data-sourcepos="18:5-18:23">解釋：生物或機器移動的能力或方式。</li>
<li data-sourcepos="19:5-19:55">用法：locomotion research (legged, humanoid robots).</li>
</ul>
</li>
<li data-sourcepos="20:1-22:72"><strong>Multi-agent</strong>（多智能體）：
<ul data-sourcepos="21:5-22:72">
<li data-sourcepos="21:5-21:31">解釋：由多個自主實體組成的系統，它們可以相互交互。</li>
<li data-sourcepos="22:5-22:72">用法：multi-agent studies (swarm intelligence, collaborative robots).</li>
</ul>
</li>
<li data-sourcepos="23:1-25:61"><strong>Adaptive behavior</strong>（適應性行為）：
<ul data-sourcepos="24:5-25:61">
<li data-sourcepos="24:5-24:26">解釋：系統根據環境變化調整其行為的能力。</li>
<li data-sourcepos="25:5-25:61">用法：adaptive behavior research (genetic algorithms, AI).</li>
</ul>
</li>
<li data-sourcepos="26:1-29:73"><strong>Controller</strong>（控制器）：
<ul data-sourcepos="27:5-29:73">
<li data-sourcepos="27:5-27:22">解釋：控制系統行為的程式或裝置。</li>
<li data-sourcepos="28:5-28:99">用法：Basic knowledge of C, C++, Java, Python, or MATLAB is required to program<span> </span><strong>controllers</strong>.</li>
<li data-sourcepos="29:5-29:73">A<span> </span><strong>controller</strong><span> </span>is a program that directs a robot in a world file.</li>
</ul>
</li>
<li data-sourcepos="30:1-32:64"><strong>Graphical</strong>（圖形的）：
<ul data-sourcepos="31:5-32:64">
<li data-sourcepos="31:5-31:22">解釋：使用圖像或視覺元素表示的。</li>
<li data-sourcepos="32:5-32:64">用法：beginners can use the<span> </span><strong>graphical</strong><span> </span>BotStudio language.</li>
</ul>
</li>
<li data-sourcepos="33:1-35:62"><strong>Virtual</strong>（虛擬的）：
<ul data-sourcepos="34:5-35:62">
<li data-sourcepos="34:5-34:23">解釋：模擬或模仿真實環境或物件的。</li>
<li data-sourcepos="35:5-35:62">用法：create 3D<span> </span><strong>virtual</strong><span> </span>worlds with physics properties.</li>
</ul>
</li>
<li data-sourcepos="36:1-38:62"><strong>Physics</strong>（物理學）：
<ul data-sourcepos="37:5-38:62">
<li data-sourcepos="37:5-37:26">解釋：研究物質、能量及其相互作用的科學。</li>
<li data-sourcepos="38:5-38:62">用法：create 3D virtual worlds with<span> </span><strong>physics</strong><span> </span>properties.</li>
</ul>
</li>
<li data-sourcepos="39:1-41:82"><strong>Plugin</strong>（外掛程式）：
<ul data-sourcepos="40:5-41:82">
<li data-sourcepos="40:5-40:21">解釋：增加軟體功能的程式模組。</li>
<li data-sourcepos="41:5-41:82">用法：and an optional<span> </span><strong>physics</strong><span> </span>plugin (in C/C++) to adjust physics behavior.</li>
</ul>
</li>
<li data-sourcepos="42:1-45:123"><strong>Supervisor</strong>（管理者）：
<ul data-sourcepos="43:5-45:123">
<li data-sourcepos="43:5-43:30">解釋：具有特殊權限的控制器，用於監控和控制模擬。</li>
<li data-sourcepos="44:5-44:45">用法：What is a<span> </span><strong>Supervisor</strong><span> </span>Controller?</li>
<li data-sourcepos="45:5-45:123">A<span> </span><strong>supervisor</strong><span> </span>controller, tied to a robot with its "supervisor" field set to TRUE, can perform privileged actions.</li>
</ul>
</li>
</ul>
<p></p>
<h2>w7</h2>
<p>檔案:<a href="/downloads/教程1.zip">/downloads/Tutorial1</a></p>
<p>操作影片如下:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wqu-VS8VobE" title="Tutorial1" width="560"></iframe></p>
<h2>w8</h2>
<p><span style="color: #000000; background-color: #ffff00;">四連桿機構</span></p>
<p>零件繪圖影片如下:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/4233leseC4E" title="四連桿機構零件繪圖" width="560"></iframe></p>
<p>零件組合如下:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/RpTotkMVaj0" title="零件組合" width="560"></iframe></p>
<h2>w14</h2>
<h2>w16</h2>
<p>1.<span>利用HW1下去進行修改長度(<span style="color: #000000; background-color: #ffff00;">第一根桿件改一半</span>)</span></p>
<p><span>檔案下載如下:<a href="/downloads/41223131_HW1 - w16.zip">/downloads/41223131_HW1 - w16.zip</a></span></p>
<p><span>操作如下:</span></p>
<p><span>1.修改第一根長度為20</span></p>
<p><span>2.節點以及軸向的尺寸位置</span></p>
<p><span>圖片如下:</span><span><img alt="" height="315" src="/images/螢幕擷取畫面 2025-06-12 175522.png" width="586"/></span></p>
<p>2.利用HW2下去進行修改長度(<span style="background-color: #ffff00;">第一根桿件改一半</span>)</p>
<p>檔案下載如下:<a href="/downloads/41223131.HW2-w16.zip">/downloads/41223131.HW2-w16.zip</a></p>
<p>操作如下:</p>
<p>1.先solvespaces改第一根長度40改為20然後存檔</p>
<p>2.把組合檔案打開進行修改尺寸(也就是草圖)</p>
<p>3.然後存檔取代掉stl、slvs</p>
<p>4.在小黑窗打pip install numpy(安裝numpy的模組)</p>
<p>5.打開白窗進行obj轉檔案</p>
<p>6.開啟wbt檔案點位修改即可完成</p>
<p>圖片如下</p>
<p><img alt="" height="315" src="/images/螢幕擷取畫面 2025-06-12 174218.png" width="588"/></p>
<p></p>
<p></p><h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p>檔案下載如下:<a href="/downloads/41223131-my_project.zip">/downloads/41223131-my_project.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/28BYEQSFCH0" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 41223131" width="560"></iframe></p>
<p>使用程式如下:</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">from controller import Robot

def run_robot():
    # Create the Robot instance
    robot = Robot()

    # Get simulation time step
    timestep = int(robot.getBasicTimeStep())

    # Get motor device
    motor = robot.getDevice('motor')

    # Set motor for continuous rotation
    motor.setPosition(float('inf'))
    motor.setVelocity(1.0)

    # Main control loop
    while robot.step(timestep) != -1:
        pass

if __name__ == "__main__":
    run_robot()
</pre>
<p></p>
<p></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p>下載檔案如下:<a href="/downloads/41223131.HW2.7z">/downloads/41223131.HW2.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Q5fUgtLNzOk" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 41223131" width="560"></iframe></p>
<p></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p>籃球機檔案:<a href="/downloads/41223131-hw3.7z">/downloads/41223131-hw3.7z</a></p>
<p>製作過程(未排除問題):</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/cgWwckpSTnI" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41223131(過程)" width="560"></iframe></p>
<p>已排除問題(完成的)</p>
<p>1.籃球機點位設置調整</p>
<p>2.程式當時未正確啟動</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/V1aAXBQXf4s" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41223131(修改好的)" width="560"></iframe></p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p><a href="https://mdecd2025.github.io/hw-yuhao-08/content/w1.html">W1</a>從此連結開始</p>
<p>各週網頁內容:</p>
<p>w1-w4:<span>進行python改版、建立本組網頁程式碼、尚未分組人員、ssh以及建立可攜程式</span></p>
<p><span>w5-w8:開啟webots以及回答問題、Tutorial、四連桿機構繪圖與組合</span></p>
<p>期中心得:</p>
<p>這堂課我覺得蠻難的，因為軟體的部分都是英文版本的，而且要加上以前的知識像是python、solvespaces等等應用與輔助，以及IPV6的網路、鑰使的設定等等，讓我有點摸不著頭緒，因此我需要更加多練習webot軟體的應用。</p>
<p>期中自評影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/mt6YpMUGNyU" title="國立虎尾科技大學-機械設計工程系-cd2025-期中自評-41223131" width="560"></iframe></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<p><span style="background-color: #ffff00;">檔案:<a href="/downloads/41223131-Quiz1.zip">/downloads/41223131-Quiz1.zip</a></span></p>
<p>1.參考圖如下(長度放大10倍，角度不變):</p>
<p><img alt="" height="315" src="/images/放大10倍.png" width="598"/></p>
<p></p>
<p><span style="background-color: #ffff00;">操作方法如下:</span></p>
<p>1.先建立一個Robot，在裡面新增:基座(base)，尺寸1m、solid</p>
<p>2.建立一個節點<span>(</span><span>joint1)</span>，把節點尺寸設置在-0.5，建立一個endPoint裡面的solid取名link1</p>
<p>3.黑色與紅色角度我學號31度轉換勁度為-1.5163，X軸建立在-0.5</p>
<p>4.在children下建立一個紅色桿子 長度為:0.4m</p>
<p>5.新增節點(<span>joint2)</span>，Z軸往上1，點位在0.4m </p>
<p>6.建立solid，角度為39.91，轉換勁度是5.38971，在children下建立兩個pose 長0.6m、短的0.3m綠色的桿子</p>
<p>7.新增節點(joint3) z軸往下1，點位在0.6m</p>
<p>8.<span>建立solid 角度為130.11<span> </span>轉換勁度是1.6189，<span>在children下建立pose，藍色長度0.9m</span></span></p>
<p><span><span>9.在建立節點4，z軸0.1，點位0.9m</span></span></p>
<p><span><span>10.記得作動的物理量需打開</span></span></p>
<p><span><span>11.導入程式如下，即可轉動</span></span></p>
<div>
<div class="syntaxhighlighter csharp" id="highlighter_379034">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="csharp plain">from controller import Robot</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="csharp plain">def run_robot():</code></div>
<div class="line number4 index3 alt1"><code class="csharp spaces">    </code><code class="csharp preprocessor"># Create the Robot instance</code></div>
<div class="line number5 index4 alt2"><code class="csharp spaces">    </code><code class="csharp plain">robot = Robot()</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="csharp spaces">    </code><code class="csharp preprocessor"># Get simulation time step</code></div>
<div class="line number8 index7 alt1"><code class="csharp spaces">    </code><code class="csharp plain">timestep = </code><code class="csharp keyword">int</code><code class="csharp plain">(robot.getBasicTimeStep())</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="csharp spaces">    </code><code class="csharp preprocessor"># Get motor device</code></div>
<div class="line number11 index10 alt2"><code class="csharp spaces">    </code><code class="csharp plain">motor = robot.getDevice(</code><code class="csharp string">'motor'</code><code class="csharp plain">)</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="csharp spaces">    </code><code class="csharp preprocessor"># Set motor for continuous rotation</code></div>
<div class="line number14 index13 alt1"><code class="csharp spaces">    </code><code class="csharp plain">motor.setPosition(</code><code class="csharp keyword">float</code><code class="csharp plain">(</code><code class="csharp string">'inf'</code><code class="csharp plain">))</code></div>
<div class="line number15 index14 alt2"><code class="csharp spaces">    </code><code class="csharp plain">motor.setVelocity(1.0)</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="csharp spaces">    </code><code class="csharp preprocessor"># Main control loop</code></div>
<div class="line number18 index17 alt1"><code class="csharp spaces">    </code><code class="csharp keyword">while</code> <code class="csharp plain">robot.step(timestep) != -1:</code></div>
<div class="line number19 index18 alt2"><code class="csharp spaces">        </code><code class="csharp plain">pass</code></div>
<div class="line number20 index19 alt1"> </div>
<div class="line number21 index20 alt2"><code class="csharp keyword">if</code> <code class="csharp plain">__name__ == </code><code class="csharp string">"__main__"</code><code class="csharp plain">:</code></div>
<div class="line number22 index21 alt1"><code class="csharp spaces">    </code><code class="csharp plain">run_robot()</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p><span style="background-color: #ffff00;">完成影片檔案如下:</span></p>
</div>
</div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/TvuXzDF6okI" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41223131" width="560"></iframe></p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p>檔案下載:<a href="/downloads/41223131_Exam2">/downloads/41223131_Exam2</a></p>
<p>操作方法如下:</p>
<p>1.我是利用HW2作業下去修改</p>
<p>2.長度的部分使用131mm、140mm、160mm;兩基座距離為180</p>
<p>(畢竟已經有限制配合，所以直接修改草圖即可)，角度有使用31度(我學號)</p>
<p><img alt="" height="315" src="/images/Quiz3-1.png" width="415"/></p>
<p>3.安裝numpy模組如下(使用小黑窗)</p>
<p><img alt="" height="315" src="/images/Quiz3-2.png" width="613"/></p>
<p>4.使用程式啟動轉obj檔案</p>
<p><img alt="" height="315" src="/images/Quiz3-3.png" width="592"/></p>
<p>5.在小黑窗開啟webotsw找到檔案開啟，找到錨點位置(X、Y、Z)</p>
<p> <span style="background-color: #ffff00;">******solvespaces上的點位是mm，webot上的點位是m，因此需要單位換算******</span></p>
<p>第一個錨點:(0、0、0)</p>
<p>第二個錨點:(1.1229、0.6747、0)</p>
<p>第三個錨點:(2.2205、1.5438、0)</p>
<p>第四個錨點:(1.8、0、0)</p>
<p>6.啟動程式如下</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">from controller import Robot

def run_robot():

    robot = Robot()

    timestep = int(robot.getBasicTimeStep())

    motor1 = robot.getDevice('motor')

    motor1.setPosition(float('inf'))
    motor1.setVelocity(1.0)

    while robot.step(timestep) != -1:
        pass

if __name__ == "__main__":
    run_robot()</pre>
<p></p>
<p>影片操作如下:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Rv9CKYias6M" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 41223131" width="560"></iframe></p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 -請每位學員利用</p>
<p>1.在 <a href="https://mde.tw/cd2025/content/IPv6.html">https://mde.tw/cd2025/content/IPv6.html</a> 中所分配的個人 IPv6 網址, 以 webotsw --stream 啟動個人所完成的 HW1 模擬系統. 並在其餘組員的電腦上, 以瀏覽器檢視啟動串流學員伺服器上的機構模擬. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: <span>"</span><span>國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 學員學號".</span></p>
<p><span>檔案下載:<a href="/downloads/41223131_EXAM3-1.zip">/downloads/41223131_EXAM3-1.zip</a></span></p>
<p><span>與41223122配合</span></p>
<p><span style="color: #000000; background-color: #ffff00;">我是客戶端的</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/NKYrks4SUmo" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 41223131(伺服器端)" width="560"></iframe></p>
<p><span></span><span style="background-color: #ffff00;">41223122為伺服器端的</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/LstOY6H4scE" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 41223131(客戶)" width="560"></iframe></p>
<p>2.<span>請每位學員利用 <a href="https://mdecd2025.github.io/hw-scrum-1/downloads/three_digit_counter.7z">three_digit_counter.7z</a> 中的七段顯示器進行修改, 以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過瀏覽器檢視參與協同組員 Webots 中所展示的學員學號. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: "國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 學員學號".</span></p>
<p><span style="background-color: #ffff00;">本組成員座號:18、22、31、36</span></p>
<p><span style="background-color: #ffff00;">與41223122配合</span></p>
<p><span style="background-color: #ffffff;">檔案下載:<a href="/downloads/41223131_EXAM3-2.zip">/downloads/41223131_EXAM3-2.zip</a></span></p>
<p><span style="background-color: #ffffff;">下面影片為我是主導端</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ITvouf0uK1A" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 41223131-主導端" width="560"></iframe></p>
<p><span style="background-color: #ffffff;"></span>下面影片為我是客戶端</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MjFM0_mRtbA" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 41223131-客戶端" width="560"></iframe></p>
<p><span style="background-color: #ffff00;">修改後的(增加到8位為數):</span></p>
<p>與41223122配合偕同</p>
<p>我是伺服器端:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_iZpqInOCmY" title="我是伺服器端-3-2" width="560"></iframe></p>
<p>我是客戶端:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_1sQcygQDsg" title="我是客戶端-3-2" width="560"></iframe></p>
<p></p>
<p>3.學員學號<span>請各組利用 <a href="https://mde.tw/cd2025/downloads/youbot_cart_w10_websocket.7z">youbot_cart_w10_websocket.7z</a> 中的 Youbot 底座平台, 由各組組長以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過 Websocket 客戶端程式控制平台車的前進、後退與左右轉. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: "國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 學員學號"</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/kIf91J4f-9U" title="國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 -41223131" width="560"></iframe></p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<p>期末報告:<a href="/downloads/2a-ag4-Shootcar-project.pdf">/downloads/2a-ag4-Shootcar-project.pdf</a></p>
<p>第一次修改:場景檔案:<a href="/downloads/w17-final-project-new.7z">/downloads/w17-final-project-new.7z</a></p>
<p>可利用S、W、A、D來控制籃框位置</p>
<p>擷取其中一段:</p>
<p><span style="background-color: #ffff00;">籃框移動如下:</span></p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false"># === 一般鍵盤控制 ===
    if key == ord('W') or key == ord('w'):
        set_wheel_velocity(MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY)
    elif key == ord('S') or key == ord('s'):
        set_wheel_velocity(-MAX_VELOCITY, -MAX_VELOCITY, -MAX_VELOCITY, -MAX_VELOCITY)
    elif key == ord('D') or key == ord('d'):
        set_wheel_velocity(-MAX_VELOCITY, MAX_VELOCITY, -MAX_VELOCITY, MAX_VELOCITY)
    elif key == ord('A') or key == ord('a'):
        set_wheel_velocity(MAX_VELOCITY, -MAX_VELOCITY, MAX_VELOCITY, -MAX_VELOCITY)
    elif key == ord('F') or key == ord('f'):</pre>
<p></p>
<p><span style="background-color: #ffff00;">投球機移動以及投球機發射動作:</span></p>
<p><span style="background-color: #ffffff;">投球機移動定點導航:</span></p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">        elif (key == ord('U') or key == ord('u')) and auto_nav_enabled:
            print("執行 U：前往 (6.23, 6.05)，朝向籃框")
            move_to_point_and_face_to((6.57369, 6.23308), (6.23, -0.18))
        elif (key == ord('I') or key == ord('i')) and auto_nav_enabled:
            print("執行 I：前往 (12.46, -0.18)，朝向籃框")
            move_to_point_and_face_to((12.70853, -0.18), (6.23, -0.18))
        elif (key == ord('O') or key == ord('o')) and auto_nav_enabled:
            print("執行 O：前往 (6.23, -6.41)，朝向籃框")
            move_to_point_and_face_to((6.43317, -6.55883), (6.23, -0.18))
        elif (key == ord('P') or key == ord('p')) and auto_nav_enabled:
            print("執行 P：前往 (0, 0)，朝向籃框")
            move_to_point_and_face_to((0.0, 0.0), (6.23, -0.18))
        elif key == ord('Q') or key == ord('q'):
            print("Exiting...")
            break
        else:
            for wheel in wheels:
                wheel.setVelocity(0)</pre>
<p>發射器開始投球:</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">f mechanism_enabled:
        _current_motor_position = sensor.getValue()
        # M key: only take action if allowed and not held
        if key == ord('M') or key == ord('m'):
            if not key_pressed['m'] and current_state == "allow_m":
                motor.setPosition(POSITION_M)
                current_state = "allow_k"
            key_pressed['m'] = True
        else:
            key_pressed['m'] = False

        # K key: only take action if allowed and not held
        if key == ord('K') or key == ord('k'):
            if not key_pressed['k'] and current_state == "allow_k":
                motor.setPosition(POSITION_K)
                current_state = "allow_m"
            key_pressed['k'] = True
        else:
            key_pressed['k'] = False

        # R key: 進入 allow_m 狀態
        if key == ord('R') or key == ord('r'):
            if not key_pressed['r']:
                current_state = "allow_m"
            key_pressed['r'] = True
        else:
            key_pressed['r'] = False</pre>
<p></p><h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>