var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:\xa0 https://mdecd2025.github.io/hw-yuhao-08/content/index.html \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-yuhao-08 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'week', 'text': '', 'tags': '', 'url': 'week.html'}, {'title': 'w1', 'text': '1.建立個人作業網站與倉儲 \n 2.分組6人一組進行協同倉儲管理 \n 3.分組團隊 (Teams) 建立後, 請參考 說明 後, 將各班各學員與各團隊的倉儲與網站連結, 分別放入標題為 list (使用第一階標題) 的網頁中. \n 註冊 Onshape 教育帳號 ) \n 4.進行python改版 \n 5.以下是影片操作過程 \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w3', 'text': '以下是使用chatgpt來顯示我們這組的倉儲以及靜態網頁的程式碼 \n from browser import html, document\n\n# 學員資料 URL\nurl = "https://mde.tw/list/2a.txt"\n# 讀取網站資料\nall_stud = open(url).readlines()[1:]  # 忽略標題列\n\n# 指定要顯示的學號\nselected_ids = {"41223118", "41223122", "41223131", "41223134", "41223136", "41223158"}\n\n# 取得網頁中的 brython_div1 位置\nbrython_div1 = document["brython_div1"]\n\n# 加入 2a-ag4 分組倉儲與靜態網頁（優先顯示）\nbrython_div1 <= "(Group-4) " + html.A("2a-ag4", href="https://mdecd2025.github.io/2a-ag4/content/index.html")\nbrython_div1 <= " | " + html.A("repo", href="https://github.com/mdecd2025/2a-ag4")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.BR()\n\n# 確保個別學員標題顯示\ncount = 0\nfor i in all_stud:\n    stud = i.split("\\t")\n    stud_num = stud[0]\n    github = stud[1]\n    \n    if stud_num in selected_ids:\n        count += 1\n        brython_div1 <= str(count) + ". " + html.A(str(stud_num), href="https://mdecd2025.github.io/hw-" + str(github))\n        brython_div1 <= " | " + html.A("repo", href="https://github.com/mdecd2025/hw-" + str(github))\n        brython_div1 <= html.BR()\n \n 以下使用Brython來顯示出我們這組的倉儲以及網頁連結 \n (Group-4)\xa0 2a-ag4 \xa0|\xa0 repo 1.\xa0 41223118 \xa0|\xa0 repo 2.\xa0 41223122 \xa0|\xa0 repo 3.\xa0 41223131 \xa0|\xa0 repo 4.\xa0 41223134 \xa0|\xa0 repo 5.\xa0 41223136 \xa0|\xa0 repo 6.\xa0 41223158 \xa0|\xa0 repo \n', 'tags': '', 'url': 'w3.html'}, {'title': '尚未分組人員', 'text': '這是利用ChatGPT做出的尚未分組的名單，但目前沒有去尋找加入錯的班級的程式碼 \n 更新前:(有顯示出已加入學名單的人員) \n from browser import html, document\n\n# 學員資料 URL\nurl = "https://mde.tw/list/2a.txt"\n# 讀取網站資料\nall_stud = open(url).readlines()[1:]  # 忽略標題列\n\n# 參與分組的學員帳號\nassigned_accounts = {\n    \'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\', \'41023128\',\n    \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\', \'41223113\', \'kim41223114\',\n    \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\', \'41223138\', \'41223134\', \'41223136\',\n    \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\', \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\',\n    \'yan21ed\', \'Lin41223107\', \'41223133\', \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\',\n    \'CHN41223132\', \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\',\n    \'41223104\', \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\', \'WSE41223112\',\n    \'41223146\', \'41223119\'\n}\n\n# 建立學號對應帳號的字典\nstud_dict = {}\nfor line in all_stud:\n    stud = line.split("\\t")\n    stud_num = stud[0].strip()\n    github = stud[1].strip()\n    stud_dict[stud_num] = github\n\n# 計算未納組的學員\nunassigned_students = [stud_num for stud_num in stud_dict if stud_dict[stud_num] not in assigned_accounts]\n\n# 取得網頁中的 brython_div1 位置\nbrython_div1 = document["brython_div1"]\n\n# 顯示未納組的學員學號\nbrython_div1 <= html.P("未納組學員學號:")\ncount = 0\nfor stud_num in sorted(unassigned_students):\n    count += 1\n    brython_div1 <= str(count) + ". " + stud_num\n    brython_div1 <= html.BR()\n \n \n 得到結果如下 \n 未納組學員學號: \n \n 41023220\xa0 \xa0 \n 41223111 \n 41223119 \n 41223124 \n 41223148 \n \n 更新如下:(已正確加入尚未分組的人員) \n import urllib.request\n\n# 設定 URL\nurl = "https://mde.tw/list/2a.txt"\n\n# 讀取網站內容\nresponse = urllib.request.urlopen(url)\ndata = response.read()  # 讀取原始資料\n\n# 檢查是否為 bytes，若是則解碼\nif isinstance(data, bytes):\n    data = data.decode(\'utf-8\')\n\n# 分割行\ndata_lines = data.splitlines()\n\n# 確保資料存在\nif len(data_lines) > 1:\n    all_stud = data_lines[1:]  # 跳過標題列\n    print("總共有 " + str(len(all_stud)) + " 名學員")\nelse:\n    all_stud = []\n    print("學員名單讀取失敗")\n\n# 已分組學員帳號\ngrouped_accounts = {\n    \'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\', \n    \'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\', \n    \'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\', \n    \'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\', \n    \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\', \n    \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\', \n    \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\', \n    \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\', \n    \'WSE41223112\', \'41223146\', \'41223119\'\n}\n\n# 未分組學員清單\nungrouped_accounts = []\n\nfor student in all_stud:\n    parts = student.split()  # 用空格分割學號和帳號\n    if len(parts) == 1:\n        student_id = parts[0]\n        account = student_id  # 如果沒有帳號，將學號當作帳號\n    elif len(parts) == 2:\n        student_id, account = parts\n    \n    account = account.strip()\n    \n    # 如果帳號不在已分組帳號清單中，則加入未分組學員清單\n    if account not in grouped_accounts:\n        ungrouped_accounts.append(student_id)\n\n# 顯示未分組學員的學號，格式化輸出\nprint("未納組學員學號:")\nprint("\\n".join(ungrouped_accounts))\n \n 總共有 60 名學員 未納組學員學號: 41023220 41223111 41223124 41223148 \n', 'tags': '', 'url': '尚未分組人員.html'}, {'title': 'ssh', 'text': '1.先在puttygen.exe上建立一個鑰使密碼，然後再save private key \n \n 2.存入個人github.com上 \n \n 3.開啟並操作putty.exe \n \xa0\xa0 \n \n 4.存完後正式開啟 \n \n \n', 'tags': '', 'url': 'ssh.html'}, {'title': 'w4', 'text': '建立可攜程式 \n 操作步驟如下 \n 1.先改變IP位置 \n 要注意ipv6和ipv4是否衝突，下面這張圖是以我學號建立的ip位置 \n \n 2.開啟start，使用內建的cmd \n 3.在cmd輸入如下 \n 注意:前提是要先建立"git clone\xa0 https://github.com/mdecd2025/hw-yuhao-08.git \xa041223131" \n \n 4.影片操作如下(要先設定身分下去進行上傳) \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '1. 分組解析webot \n 2.下載 Webots_2025a.7z \xa0 (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n 並且啟動ipv4，在CMD輸入如下，即可正確開啟 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '本組回答問題的網頁 \n 下面是我個人需要回答的問題 \n 4.請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法: \n \n Simulation （模擬）：\n \n 解釋：使用模型來模仿真實系統或過程的行為。 \n 用法：Webots is a professional mobile robot \xa0 simulation \xa0 software. \n Webots \xa0 simulation \xa0 consists of a world file. \n \n \n Prototyping （原型製作）：\n \n 解釋：快速建立一個初步模型，用於測試或演示。 \n 用法：provides a rapid \xa0 prototyping \xa0 environment. \n robot \xa0 prototyping \xa0 (e.g., academic, automotive, toy industries) \n \n \n Actuators （致動器）：\n \n 解釋：將信號轉換為機械運動的裝置，用於控制機器或系統。 \n 用法：Users can equip robots with sensors and \xa0 actuators \xa0 and program them for desired behaviors. \n \n \n Sensors （感測器）：\n \n 解釋：偵測環境變化並將其轉換為信號的裝置。 \n 用法：Users can equip robots with \xa0 sensors \xa0 and actuators and program them for desired behaviors. \n \n \n Locomotion （運動）：\n \n 解釋：生物或機器移動的能力或方式。 \n 用法：locomotion research (legged, humanoid robots). \n \n \n Multi-agent （多智能體）：\n \n 解釋：由多個自主實體組成的系統，它們可以相互交互。 \n 用法：multi-agent studies (swarm intelligence, collaborative robots). \n \n \n Adaptive behavior （適應性行為）：\n \n 解釋：系統根據環境變化調整其行為的能力。 \n 用法：adaptive behavior research (genetic algorithms, AI). \n \n \n Controller （控制器）：\n \n 解釋：控制系統行為的程式或裝置。 \n 用法：Basic knowledge of C, C++, Java, Python, or MATLAB is required to program \xa0 controllers . \n A \xa0 controller \xa0 is a program that directs a robot in a world file. \n \n \n Graphical （圖形的）：\n \n 解釋：使用圖像或視覺元素表示的。 \n 用法：beginners can use the \xa0 graphical \xa0 BotStudio language. \n \n \n Virtual （虛擬的）：\n \n 解釋：模擬或模仿真實環境或物件的。 \n 用法：create 3D \xa0 virtual \xa0 worlds with physics properties. \n \n \n Physics （物理學）：\n \n 解釋：研究物質、能量及其相互作用的科學。 \n 用法：create 3D virtual worlds with \xa0 physics \xa0 properties. \n \n \n Plugin （外掛程式）：\n \n 解釋：增加軟體功能的程式模組。 \n 用法：and an optional \xa0 physics \xa0 plugin (in C/C++) to adjust physics behavior. \n \n \n Supervisor （管理者）：\n \n 解釋：具有特殊權限的控制器，用於監控和控制模擬。 \n 用法：What is a \xa0 Supervisor \xa0 Controller? \n A \xa0 supervisor \xa0 controller, tied to a robot with its "supervisor" field set to TRUE, can perform privileged actions. \n \n \n \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '檔案: /downloads/Tutorial1 \n 操作影片如下: \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '四連桿機構 \n 零件繪圖影片如下: \n \n 零件組合如下: \n \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w10', 'text': '截至目前已知： \n 1.最新的可攜程式系統與套件版本 \n 2.已知如何自行建立各種版本的 Python 可攜系統 \n 3.已知哪一個版本 SciTE 較為穩定 \n 4.已知如何使用 Codespaces 管理個人與協同分組的倉儲 \n 5.已知可以透過 token 或 Github session 管理管理個人與協同分組的倉儲 \n 6.已知哪一個版本的 Webots 較為穩定 \n 7.已知如何更新個人與協同分組的倉儲, 以便套用所分配的 \xa0 IPv6 位址 啟動網際協同流程 \n 8.已知投籃機的零組件可以透過 Solvespace 與 Oneshape 繪製，其中前者簡便而後者有利於協同 \n 9.已知如何利用 Solid - Shape - Box 或 Solid - CadShape 建立封閉式多連桿機構模擬，(若希望直接更改零組件顏色， 則可以使用 Solid - Shape - Mesh 進行多連桿機構進行組立 \n 10.已知可以透過 Solid - Shape - Mesh 中 material 的名稱，以控制器程式改變顏色，進而製作出七段顯示模擬器 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w14', 'text': '端午節放假 \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '抽查第一次 \n 1.開啟自己的ipv6可攜 \n 2.開啟HW1確認是否有完成 \n 3.確認是否可以使用webotsw --stream進行串流 \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '1. 利用HW1下去進行修改長度( 第一根桿件改一半 ) \n 檔案下載如下: /downloads/41223131_HW1 - w16.zip \n 操作如下: \n 1.修改第一根長度為20 \n 2.節點以及軸向的尺寸位置 \n 圖片如下: \n 2.利用HW2下去進行修改長度( 第一根桿件改一半 ) \n 檔案下載如下: /downloads/41223131.HW2-w16.zip \n 操作如下: \n 1.先solvespaces改第一根長度40改為20然後存檔 \n 2.把組合檔案打開進行修改尺寸(也就是草圖) \n 3.然後存檔取代掉stl、slvs \n 4.在小黑窗打pip install numpy(安裝numpy的模組) \n 5.打開白窗進行obj轉檔案 \n 6.開啟wbt檔案點位修改即可完成 \n 圖片如下 \n \n \n \n', 'tags': '', 'url': 'w16.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n 檔案下載如下: /downloads/41223131-my_project.zip \n \n 使用程式如下: \n from controller import Robot\n\ndef run_robot():\n    # Create the Robot instance\n    robot = Robot()\n\n    # Get simulation time step\n    timestep = int(robot.getBasicTimeStep())\n\n    # Get motor device\n    motor = robot.getDevice(\'motor\')\n\n    # Set motor for continuous rotation\n    motor.setPosition(float(\'inf\'))\n    motor.setVelocity(1.0)\n\n    # Main control loop\n    while robot.step(timestep) != -1:\n        pass\n\nif __name__ == "__main__":\n    run_robot()\n \n 回答簡單問題: \n 1.在製作 HW1 之前是否實際練習 Tutorial1 與 Tutorial2? \n 有先練習過 Tutorial1。 \n 2.Webots 是什麼？它主要用途為何？ \n 它可模擬機器人的機構、感測器、物理碰撞。 \n 3.如何在 Webots 中建立並執行一個新的模擬 world？ \n 先開啟file----New-----New project Directory-----next按到底 \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n 下載檔案如下: /downloads/41223131.HW2.7z \n \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n 籃球機檔案: /downloads/41223131-hw3.7z \n 製作過程(未排除問題): \n \n 已排除問題(完成的) \n 1.籃球機點位設置調整 \n 2.程式當時未正確啟動 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n W1 從此連結開始 \n 各週網頁內容: \n w1-w4: 進行python改版、建立本組網頁程式碼、尚未分組人員、ssh以及建立可攜程式 \n w5-w8:開啟webots以及回答問題、Tutorial、四連桿機構繪圖與組合 \n 期中心得: \n 這堂課我覺得蠻難的，因為軟體的部分都是英文版本的，而且要加上以前的知識像是python、solvespaces等等應用與輔助，以及IPV6的網路、鑰使的設定等等，讓我有點摸不著頭緒，因此我需要更加多練習webot軟體的應用。 \n 期中自評影片: \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n 檔案: /downloads/41223131-Quiz1.zip \n 1.參考圖如下(長度放大10倍，角度不變): \n \n \n 操作方法如下: \n 1.先建立一個Robot，在裡面新增:基座(base)，尺寸1m、solid \n 2.建立一個節點 ( joint1) ，把節點尺寸設置在-0.5，建立一個endPoint裡面的solid取名link1 \n 3.黑色與紅色角度我學號31度轉換勁度為-1.5163，X軸建立在-0.5 \n 4.在children下建立一個紅色桿子 長度為:0.4m \n 5.新增節點( joint2) ，Z軸往上1，點位在0.4m\xa0 \n 6.建立solid，角度為39.91，轉換勁度是5.38971，在children下建立兩個pose 長0.6m、短的0.3m綠色的桿子 \n 7.新增節點(joint3) z軸往下1，點位在0.6m \n 8. 建立solid 角度為130.11 \xa0 轉換勁度是1.6189， 在children下建立pose，藍色長度0.9m \n 9.在建立節點4，z軸0.1，點位0.9m \n 10.記得作動的物理量需打開 \n 11.導入程式如下，即可轉動 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n \n \n \n from controller import Robot \n \xa0 \n def run_robot(): \n \xa0\xa0\xa0\xa0 # Create the Robot instance \n \xa0\xa0\xa0\xa0 robot = Robot() \n \xa0 \n \xa0\xa0\xa0\xa0 # Get simulation time step \n \xa0\xa0\xa0\xa0 timestep =  int (robot.getBasicTimeStep()) \n \xa0 \n \xa0\xa0\xa0\xa0 # Get motor device \n \xa0\xa0\xa0\xa0 motor = robot.getDevice( \'motor\' ) \n \xa0 \n \xa0\xa0\xa0\xa0 # Set motor for continuous rotation \n \xa0\xa0\xa0\xa0 motor.setPosition( float ( \'inf\' )) \n \xa0\xa0\xa0\xa0 motor.setVelocity(1.0) \n \xa0 \n \xa0\xa0\xa0\xa0 # Main control loop \n \xa0\xa0\xa0\xa0 while   robot.step(timestep) != -1: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pass \n \xa0 \n if   __name__ ==  "__main__" : \n \xa0\xa0\xa0\xa0 run_robot() \n \n \n \n \n \n 完成影片檔案如下: \n \n \n \n 回答部分問題: \n 1. Robot 節點代表什麼角色? \n Robot  節點代表模擬中的智慧機器人，內部可包含馬達、感測器、關節等裝置。 \n 2.base Solid 節點的功能為何？ \n Solid  定義具物理性質的實體物件，包括質量、形狀、碰撞盒等。 base  通常是機器人或結構的核心支撐。 \n 3.Shape 與 Appearance 如何設定外觀？ \n Shape  定義物體外觀的幾何形狀， Appearance 則設定材質和光學 \n 4.otationalMotor 裝置如何與 HingeJoint 結合？ \n RotationalMotor  放在  HingeJoint  的  device  裏，它驅動關節旋轉，使連接的實體可以動起來  。 \n 5.Solid 和 boundingObject 的關係？ \n boundingObject 通常引用一個  Shape  或幾何，作為碰撞盒或物理邊界。這允許物件進行碰撞偵測與物理互動。', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n 檔案下載: /downloads/41223131_Exam2 \n 操作方法如下: \n 1.我是利用HW2作業下去修改 \n 2.長度的部分使用131mm、140mm、160mm;兩基座距離為180 \n (畢竟已經有限制配合，所以直接修改草圖即可)，角度有使用31度(我學號) \n \n 3.安裝numpy模組如下(使用小黑窗) \n \n 4.使用程式啟動轉obj檔案 \n \n 5.在小黑窗開啟webotsw找到檔案開啟，找到錨點位置(X、Y、Z) \n \xa0 ******solvespaces上的點位是mm，webot上的點位是m，因此需要單位換算****** \n 第一個錨點:(0、0、0) \n 第二個錨點:(1.1229、0.6747、0) \n 第三個錨點:(2.2205、1.5438、0) \n 第四個錨點:(1.8、0、0) \n 6.啟動程式如下 \n from controller import Robot\n\ndef run_robot():\n\n    robot = Robot()\n\n    timestep = int(robot.getBasicTimeStep())\n\n    motor1 = robot.getDevice(\'motor\')\n\n    motor1.setPosition(float(\'inf\'))\n    motor1.setVelocity(1.0)\n\n    while robot.step(timestep) != -1:\n        pass\n\nif __name__ == "__main__":\n    run_robot() \n \n 影片操作如下: \n \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 -請每位學員利用 \n 1.在\xa0 https://mde.tw/cd2025/content/IPv6.html \xa0中所分配的個人 IPv6 網址, 以 webotsw --stream 啟動個人所完成的 HW1 模擬系統. 並在其餘組員的電腦上, 以瀏覽器檢視啟動串流學員伺服器上的機構模擬. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題:\xa0 " 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 學員學號". \n 檔案下載: /downloads/41223131_EXAM3-1.zip \n 與41223122配合 \n 我是客戶端的 \n \n 41223122為伺服器端的 \n \n 2. 請每位學員利用\xa0 three_digit_counter.7z \xa0中的七段顯示器進行修改,\xa0以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過瀏覽器檢視參與協同組員 Webots 中所展示的學員學號.\xa0完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題:\xa0"國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 學員學號". \n 本組成員座號:18、22、31、36 \n 與41223122配合 \n 檔案下載: /downloads/41223131_EXAM3-2.zip \n 下面影片為我是主導端 \n \n 下面影片為我是客戶端 \n \n 修改後的(增加到8位為數): \n 與41223122配合偕同 \n 我是伺服器端: \n \n 我是客戶端: \n \n \n 3.學員學號 請各組利用\xa0 youbot_cart_w10_websocket.7z \xa0中的 Youbot 底座平台, 由各組組長以 webotsw --stream 啟動後,\xa0可在其餘組員的電腦中, 透過 Websocket 客戶端程式控制平台車的前進、後退與左右轉.\xa0完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題:\xa0"國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 學員學號" \n \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n 期末報告: /downloads/2a-ag4-Shootcar-project.pdf \n 第一次修改 :場景檔案: /downloads/w17-final-project-new.7z \n 可利用S、W、A、D來控制籃框位置 \n 擷取其中一段: \n 籃框移動如下: \n # === 一般鍵盤控制 ===\n    if key == ord(\'W\') or key == ord(\'w\'):\n        set_wheel_velocity(MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY)\n    elif key == ord(\'S\') or key == ord(\'s\'):\n        set_wheel_velocity(-MAX_VELOCITY, -MAX_VELOCITY, -MAX_VELOCITY, -MAX_VELOCITY)\n    elif key == ord(\'D\') or key == ord(\'d\'):\n        set_wheel_velocity(-MAX_VELOCITY, MAX_VELOCITY, -MAX_VELOCITY, MAX_VELOCITY)\n    elif key == ord(\'A\') or key == ord(\'a\'):\n        set_wheel_velocity(MAX_VELOCITY, -MAX_VELOCITY, MAX_VELOCITY, -MAX_VELOCITY)\n    elif key == ord(\'F\') or key == ord(\'f\'): \n \n 投球機移動以及投球機發射動作: \n 投球機移動定點導航: \n         elif (key == ord(\'U\') or key == ord(\'u\')) and auto_nav_enabled:\n            print("執行 U：前往 (6.23, 6.05)，朝向籃框")\n            move_to_point_and_face_to((6.57369, 6.23308), (6.23, -0.18))\n        elif (key == ord(\'I\') or key == ord(\'i\')) and auto_nav_enabled:\n            print("執行 I：前往 (12.46, -0.18)，朝向籃框")\n            move_to_point_and_face_to((12.70853, -0.18), (6.23, -0.18))\n        elif (key == ord(\'O\') or key == ord(\'o\')) and auto_nav_enabled:\n            print("執行 O：前往 (6.23, -6.41)，朝向籃框")\n            move_to_point_and_face_to((6.43317, -6.55883), (6.23, -0.18))\n        elif (key == ord(\'P\') or key == ord(\'p\')) and auto_nav_enabled:\n            print("執行 P：前往 (0, 0)，朝向籃框")\n            move_to_point_and_face_to((0.0, 0.0), (6.23, -0.18))\n        elif key == ord(\'Q\') or key == ord(\'q\'):\n            print("Exiting...")\n            break\n        else:\n            for wheel in wheels:\n                wheel.setVelocity(0) \n 發射器開始投球: \n f mechanism_enabled:\n        _current_motor_position = sensor.getValue()\n        # M key: only take action if allowed and not held\n        if key == ord(\'M\') or key == ord(\'m\'):\n            if not key_pressed[\'m\'] and current_state == "allow_m":\n                motor.setPosition(POSITION_M)\n                current_state = "allow_k"\n            key_pressed[\'m\'] = True\n        else:\n            key_pressed[\'m\'] = False\n\n        # K key: only take action if allowed and not held\n        if key == ord(\'K\') or key == ord(\'k\'):\n            if not key_pressed[\'k\'] and current_state == "allow_k":\n                motor.setPosition(POSITION_K)\n                current_state = "allow_m"\n            key_pressed[\'k\'] = True\n        else:\n            key_pressed[\'k\'] = False\n\n        # R key: 進入 allow_m 狀態\n        if key == ord(\'R\') or key == ord(\'r\'):\n            if not key_pressed[\'r\']:\n                current_state = "allow_m"\n            key_pressed[\'r\'] = True\n        else:\n            key_pressed[\'r\'] = False \n \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};